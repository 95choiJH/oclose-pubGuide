.swiperCustom.d1.base {
    max-width: 164rem;
}
.swiperCustom.d1.base .a_swiper {
    position: relative;
}
.swiperCustom.d1.base .a_swiper .w_pagination {
    position: absolute;
    top: 50%;
    left: 6rem;
    width: 4rem;
    height: 32rem;
    transform: translateY(-50%);
    background-color: rgba(77, 74, 67, 0.5);
    border-radius: 4rem;
    z-index: 10;
}
.swiperCustom.d1.base .a_swiper .w_pagination .a_progress {
    position: relative;
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: 2.5rem 0;
}
.swiperCustom.d1.base .a_swiper .w_pagination .a_progress .swiper-pagination-current {
    font-family: "Roboto", sans-serif;
    font-size: 1.2rem;
    font-weight: 600;
    line-height: 1.2rem;
    color: #fff;
}
.swiperCustom.d1.base .a_swiper .w_pagination .a_progress .a_button {
    position: relative;
    width: 1.4rem;
    height: 1.4rem;
}
.swiperCustom.d1.base .a_swiper .w_pagination .a_progress .a_button .remote {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.swiperCustom.d1.base .a_swiper .w_pagination .progress-bar {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0.1rem;
    height: 21.4rem;
    background-color: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    z-index: 10;
}
.swiperCustom.d1.base .a_swiper .w_pagination .progress-bar .progress {
    --progress: 0;
    stroke-dasharray: 230;
    stroke-dashoffset: calc(230 * (1 - var(--progress)));
    width: 0.2rem;
    height: 21.4rem;
}

.section.component {
    position: relative;
    padding: 2rem;
    height: 100vh;
    background-color: #fff;
}
.section.component .i_component {
    display: flex;
    width: 100%;
    height: 100%;
}
.section.component .i_component .a_side {
    position: relative;
    height: 100%;
    max-width: 20rem;
}
.section.component .i_component .a_side .i_side {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
}
.section.component .i_component .a_side .i_side .a_top .a_logo {
    position: relative;
    text-align: center;
}
.section.component .i_component .a_side .i_side .a_top .a_logo .logo {
    display: inline-block;
    font-family: "Saira Stencil One", sans-serif;
    font-size: 12.5rem;
    line-height: 12.5rem;
    color: #091540;
    transform: skew(10deg, 15deg);
}
@media (max-width: 1023px) {
    .section.component .i_component .a_side .i_side .a_top .a_logo .logo {
        font-size: 3.5rem;
        line-height: 3.5rem;
    }
}
.section.component .i_component .a_side .i_side .a_top .a_logo::after {
    content: "";
    position: absolute;
    bottom: -2rem;
    display: block;
    width: 100%;
    height: 0.1rem;
    background-color: #000022;
}
.section.component .i_component .a_side .i_side .a_top::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 0.1rem;
    height: 12.5rem;
    background-color: #000022;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_side .i_side .a_top::after {
        height: 4.5rem;
    }
}
.section.component .i_component .a_side .i_side .a_top + .a_bottom {
    margin-top: 4rem;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_side .i_side .a_top + .a_bottom {
        margin-top: 3rem;
    }
}
.section.component .i_component .a_side .i_side .a_bottom {
    display: flex;
    flex-direction: column;
    height: 100%;
    border-right: 0.1rem solid #000022;
}
.section.component .i_component .a_side .i_side .a_bottom .a_menu {
    flex: 1;
    width: 20rem;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_side .i_side .a_bottom .a_menu {
        width: 10rem;
    }
}
.section.component .i_component .a_side .i_side .a_bottom .copyright {
    display: inline-block;
    font-size: 2rem;
    line-height: 2rem;
    color: #091540;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_side .i_side .a_bottom .copyright {
        display: none;
    }
}
.section.component .i_component .a_component {
    width: 100%;
}
.section.component .i_component .a_component .a_header {
    position: relative;
    display: flex;
    flex-direction: column;
}
.section.component .i_component .a_component .a_header .a_tit {
    flex: 1;
    padding-left: 4rem;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_component .a_header .a_tit {
        padding-left: 3rem;
    }
}
.section.component .i_component .a_component .a_header .a_tit .cate {
    font-size: 3.9rem;
    line-height: 4.1rem;
    color: #7692FF;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_component .a_header .a_tit .cate {
        display: none;
    }
}
.section.component .i_component .a_component .a_header .a_tit .tit {
    font-size: 8.4rem;
    line-height: 8.4rem;
    color: #3D518C;
}
@media (max-width: 1023px) {
    .section.component .i_component .a_component .a_header .a_tit .tit {
        font-size: 3.5rem;
        line-height: 3.5rem;
    }
}
.section.component .i_component .a_component .a_header::after {
    content: "";
    position: absolute;
    bottom: -2rem;
    display: block;
    width: 100%;
    height: 0.1rem;
    background-color: #000022;
}
.section.component .i_component .a_component .a_header + .a_contents {
    margin-top: 4rem;
}
.section.component .i_component .a_component .a_contents {
    position: relative;
    padding: 2rem;
}
.section.component .i_component .a_component .a_contents .w_guide-detail {
    position: absolute;
    top: 3rem;
    right: 3rem;
    z-index: 10;
}
.section.component .i_component .a_component .a_contents .w_guide-detail .a_button {
    display: block;
    width: 3rem;
    height: 3rem;
    background-color: #000;
    border-radius: 0.8rem;
}
.section.component .i_component .a_component .a_contents .w_guide-detailView {
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.3);
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 1rem;
    vertical-align: baseline;
    box-sizing: border-box;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}

html {
    font-size: 62.5%;
}

body {
    line-height: 1;
}

ol, ul, li {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
    content: "";
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

html,
body {
    font-family: "Bebas Neue", sans-serif;
    letter-spacing: 0;
    -webkit-overflow-scrolling: touch;
    -moz-overflow-scrolling: touch;
    text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -o-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
}

em,
i,
cite,
code,
address {
    font-style: normal;
    font-weight: normal;
}

a,
u,
ins {
    text-decoration: none;
    color: inherit;
}

table caption {
    overflow: hidden;
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    line-height: 1px;
    font-size: 1px;
    color: transparent;
    border: 0;
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
}

button {
    padding: 0;
    border: none;
    background: none;
    cursor: pointer;
}

label,
img,
input,
select,
textarea,
button,
a {
    vertical-align: middle;
}

input,
button,
select,
textarea {
    font-family: unset;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: 0;
}

sup {
    vertical-align: super;
    font-size: smaller;
}

sub {
    vertical-align: text-bottom;
    font-size: smaller;
}

.blind {
    display: block;
    position: absolute;
    overflow: hidden;
    visibility: hidden;
    margin: -1px;
    padding: 0;
    width: 0;
    height: 0;
    font-size: 0;
    clip: rect(0 0 0 0);
    pointer-events: none;
}

.section.intro {
    height: 100vh;
    background-color: #FFFFFA;
    overflow: hidden;
}
.section.intro .i_intro {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    max-width: 192rem;
    height: 100%;
    padding: 2rem 3.5rem;
    margin: 0 auto;
}
@media (max-width: 1023px) {
    .section.intro .i_intro {
        padding: 2rem 2rem;
    }
}
.section.intro .i_intro .a_tit .tit {
    font-size: 18.8rem;
    line-height: 17.2rem;
    color: #3D518C;
}
@media (max-width: 1023px) {
    .section.intro .i_intro .a_tit .tit {
        font-size: 6.2rem;
        line-height: 6.4rem;
    }
}
.section.intro .i_intro .a_txt .txt {
    display: block;
    font-size: 6.4rem;
    line-height: 6.6rem;
    color: #7692FF;
}
@media (max-width: 1023px) {
    .section.intro .i_intro .a_txt .txt {
        font-size: 2.6rem;
        line-height: 2.8rem;
    }
}
.section.intro .i_intro .a_logo {
    position: absolute;
    right: 3.5rem;
    bottom: 0;
}
@media (max-width: 1023px) {
    .section.intro .i_intro .a_logo {
        right: 2rem;
    }
}
.section.intro .i_intro .a_logo .logo {
    font-family: "Saira Stencil One", sans-serif;
    font-size: 37rem;
    line-height: 35rem;
    color: #091540;
}
@media (max-width: 1023px) {
    .section.intro .i_intro .a_logo .logo {
        font-size: 8.8rem;
        line-height: 11.5rem;
    }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
